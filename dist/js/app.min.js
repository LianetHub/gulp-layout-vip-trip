/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\n\r\n// const { default: Swiper } = require(\"swiper\");\r\n\r\n// Инициализация Fancybox\r\nif (typeof Fancybox !== \"undefined\" && Fancybox !== null) {\r\n    Fancybox.bind(\"[data-fancybox]\", {\r\n        dragToClose: false,\r\n        closeButton: false\r\n    });\r\n}\r\n\r\n\r\n$(document).ready(function () {\r\n\r\n\r\n    // click handler\r\n    $(document).on(\"click\", function (e) {\r\n        const $target = $(e.target);\r\n\r\n        if ($target.closest('.header__menu-toggler').length) {\r\n            $('.header').toggleClass('open-menu');\r\n            $('body').toggleClass('lock-menu');\r\n        }\r\n\r\n        if ($target.hasClass('menu__link')) {\r\n            $target.toggleClass('active');\r\n            $target.next().toggleClass('active');\r\n        }\r\n\r\n        if ($target.hasClass('header__languages-current')) {\r\n            $target.next().slideToggle();\r\n        }\r\n    });\r\n\r\n\r\n    // init select2\r\n    $('.select').select2({\r\n        minimumResultsForSearch: Infinity\r\n    })\r\n\r\n    // init datepicker\r\n    new Datepicker('.form__control-date')\r\n\r\n\r\n    // Input type=\"tel\" Mask\r\n    if ($('input[type=\"tel\"]').length > 0) {\r\n        $('input[type=\"tel\"]').each(function (idx, input) {\r\n\r\n\r\n            const iti = intlTelInput(input, {\r\n                utilsScript: \"https://cdn.jsdelivr.net/npm/intl-tel-input@18.2.1/build/js/utils.js\",\r\n                initialCountry: \"ru\",\r\n                preferredCountries: ['ru'],\r\n                autoPlaceholder: false,\r\n                separateDialCode: true\r\n            });\r\n\r\n\r\n            function setMask() {\r\n                const mask = getFormattedNumber(\"9\");\r\n                const formattedExampleNumber = getFormattedNumber();\r\n\r\n                $(input).inputmask('remove');\r\n                $(input).inputmask({\r\n                    \"mask\": mask,\r\n                    showMaskOnHover: false,\r\n                })\r\n\r\n                $(input).attr('placeholder', formattedExampleNumber);\r\n\r\n                $(input).on('blur', function () {\r\n                    $(input).attr('placeholder', formattedExampleNumber);\r\n                })\r\n\r\n            }\r\n\r\n            function getFormattedNumber(symbol = \"_\") {\r\n                const countryData = iti.getSelectedCountryData();\r\n\r\n                const exampleNumber = intlTelInputUtils.getExampleNumber(\r\n                    countryData.iso2,\r\n                    false,\r\n                    intlTelInputUtils.numberFormat.INTERNATIONAL\r\n                );\r\n\r\n                const numberWithoutDialCode = exampleNumber.replace(/^\\+\\d{1,3}/, '').trimStart();\r\n                const formattedNumber = numberWithoutDialCode.replace(/\\d/g, symbol);\r\n\r\n                return formattedNumber;\r\n            }\r\n\r\n\r\n            $(input).on('countrychange', function () {\r\n                setMask();\r\n            });\r\n\r\n            iti.promise.then(function () {\r\n                setMask();\r\n            });\r\n\r\n\r\n        });\r\n    }\r\n\r\n    // sliders\r\n    if ($('.promo__slider').length) {\r\n        new Swiper('.promo__slider', {\r\n            slidesPerView: 1,\r\n            effect: \"fade\",\r\n            loop: true,\r\n            speed: 1000,\r\n            autoplay: {\r\n                delay: 7000,\r\n                disableOnInteraction: false\r\n            },\r\n            fadeEffect: {\r\n                crossFade: true\r\n            },\r\n            pagination: {\r\n                el: \".promo__pagination\",\r\n                clickable: true\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n    if ($('.promo__services-slider').length) {\r\n        new Swiper('.promo__services-slider .swiper', {\r\n            slidesPerView: 1,\r\n            navigation: {\r\n                nextEl: \".promo__services-next\",\r\n                prevEl: \".promo__services-prev\",\r\n            },\r\n            breakpoints: {\r\n                767.98: {\r\n                    slidesPerView: 2\r\n                },\r\n                1100: {\r\n                    slidesPerView: 3\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    // parallax\r\n\r\n    function parallax($elements, xpos = \"50%\", speedFactor = 0.1, outerHeight = true) {\r\n        let windowHeight = $(window).height();\r\n\r\n        function getHeight($el) {\r\n            return outerHeight ? $el.outerHeight(true) : $el.height();\r\n        }\r\n\r\n        function update() {\r\n            const pos = $(window).scrollTop();\r\n\r\n            $elements.each(function () {\r\n                const $el = $(this);\r\n                const top = $el.offset().top;\r\n                const height = getHeight($el);\r\n\r\n                if ((top + height < pos) || (top > pos + windowHeight)) {\r\n                    return;\r\n                }\r\n\r\n                $el.css('background-position', `${xpos} ${Math.round((top - pos) * speedFactor)}px`);\r\n            });\r\n        }\r\n\r\n        $(window).on('scroll', update);\r\n        $(window).on('resize', function () {\r\n            windowHeight = $(window).height();\r\n            update();\r\n        });\r\n\r\n        update();\r\n    }\r\n\r\n    function initParallax() {\r\n        if (/Mobi/.test(navigator.userAgent)) return;\r\n\r\n        const $parallaxEls = $('.parallax');\r\n\r\n        if ($parallaxEls.length) {\r\n            parallax($parallaxEls, \"50%\", 0.2);\r\n        }\r\n    }\r\n\r\n    initParallax();\r\n\r\n\r\n    // scroll animation\r\n\r\n    if (!!window.IntersectionObserver) {\r\n        const callback = function (entries) {\r\n            entries.forEach(entry => {\r\n                if (entry.isIntersecting) {\r\n                    entry.target.classList.add(\"is-visible\");\r\n                }\r\n            });\r\n        };\r\n\r\n        const observer = new IntersectionObserver(callback);\r\n\r\n        const targets = document.querySelectorAll(\".js-animatedScroll\");\r\n        targets.forEach(function (target) {\r\n            observer.observe(target);\r\n        });\r\n    }\r\n\r\n\r\n    // header offset page \r\n    getHeaderHeight();\r\n\r\n    function getHeaderHeight() {\r\n        const headerHeight = $('.header').outerHeight();\r\n        $('body').css('--header-height', `${headerHeight}px`);\r\n    }\r\n\r\n    $(window).on('resize', getHeaderHeight);\r\n\r\n\r\n});\r\n\r\n\n\n//# sourceURL=webpack://tlm-gulp/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;